# Copyright 2018 TriggerMesh, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: build.knative.dev/v1alpha1
kind: BuildTemplate
metadata:
  name: azure-runtime
  annotations:
    origin: github.com/triggermesh/azure-runtime
spec:
  parameters:
  - name: IMAGE
    description: The URI of the image to push, including registry host
  - name: TAG
    description: Tag of the image being pushed
    default: latest
  - name: DIRECTORY
    description: The subdirectory of the workspace/repo
    default: .
  - name: SKIP_TLS_VERIFY
    description: Skip registry TLS verification at push
    default: "false"
  steps:
  - name: dockerfile
    image: gcr.io/kaniko-project/executor:debug@sha256:5a8d578dc7ff0114daadb20902bf8529f9a2257440d68ac9c6c4b7da98665ca1
    command:
    - /busybox/sh
    args:
    - -c
    - |
      cd /workspace/${DIRECTORY}
      [ -f "Dockerfile" ] && echo "Dockerfile found (from init --docker presumably)" && exit 0
      # TBD how to handle npm ci (see nodejs-runtime)
      cat <<EOF >> Dockerfile
      FROM gcr.io/triggermesh/azure-func
      USER root
      COPY . /home/func
      RUN chown -R func:func /home/func
      ENV ASPNETCORE_URLS=http://+:8080
      USER func:func
      WORKDIR /home/func
      CMD ["func", "start", "--port", "8080"]      
      EOF
      pwd
      ls -l
      cat Dockerfile
  - name: export
    image: gcr.io/kaniko-project/executor@sha256:413fe14232a5f37f02a57758fe891993df3d58114ed948b00c9b044ed2f05f45
    args:
    - --context=/workspace/${DIRECTORY}
    - --dockerfile=/workspace/${DIRECTORY}/Dockerfile
    - --destination=${IMAGE}:${TAG}
    - --skip-tls-verify=${SKIP_TLS_VERIFY}
